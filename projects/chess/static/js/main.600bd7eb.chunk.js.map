{"version":3,"sources":["App.tsx","Teams.tsx","index.tsx"],"names":["App","board","teams","pieceConstructor","piece","color","column","row","firstmove","team","y","x","pieceObject","push","makePieces","Teams","boardSquares","boardClasses","i","length","j","squareClass","id","background","setBoard","findPiece","key","columnNumber","Math","floor","find","round","pieceIcon","prettyPieces","map","square","className","style","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLA6GeA,MA1Gf,WACE,IAAMC,EACE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GADxBA,EAEK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE3BC,ECNO,WAIX,SAASC,EAAiBC,EAAeC,EAAeC,EAAgBC,GAEpE,MAAO,CAAEH,MAAOA,EAAOC,MAAOA,EAAOC,OAAQA,EAAQC,IAAKA,EAAKC,WAAW,GAoD9E,OAjDA,WAKI,IAJA,IACIJ,EADEK,EAAO,GAETJ,EAAQ,QAEHK,EAAI,EAAGA,GAAK,EAAGA,IAIpB,GAFIA,EAAI,IAAGL,EAAQ,SAET,IAANK,GAAiB,IAANA,EACX,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,OAAQA,GACJ,KAAK,EACL,KAAK,EACDP,EAAQ,OACR,MACJ,KAAK,EACL,KAAK,EACDA,EAAQ,SACR,MACJ,KAAK,EACL,KAAK,EACDA,EAAQ,SACR,MACJ,KAAK,EACDA,EAAQ,QACR,MACJ,KAAK,EACDA,EAAQ,OACR,MACJ,QACIA,EAAQ,GAIhB,IAAMQ,EAAcT,EAAiBC,EAAOC,EAAOM,EAAGD,GAEtDD,EAAKI,KAAKD,QAEX,GAAU,IAANF,GAAiB,IAANA,EAClB,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,IAAMC,EAAcT,EAAiB,OAAQE,EAAOM,EAAGD,GACvDD,EAAKI,KAAKD,GAItB,OAAOH,EArDGK,GDIFC,GACRC,EAUN,WAGE,IAFA,IAAIL,EAAI,EACFM,EAAe,GACZC,EAAI,EAAGA,EAAIjB,EAAckB,OAAQD,IAAK,CAC7C,IAAK,IAAIE,EAAI,EAAGA,EAAInB,EAAWkB,OAAQC,IAAK,CAC1C,IAAMC,EAAc,CAAEC,GAAKrB,EAAWmB,GAAK,GAAMnB,EAAciB,GAAIK,WAAYZ,EAAI,EAAI,OAAS,SAChGM,EAAaJ,KAAKQ,GAClBV,IAEFA,IAEF,OAAOM,EArBYO,GA8ErB,SAASC,EAAUC,GACjB,IAAMC,EAAeC,KAAKC,MAAMH,GAC1BtB,EAAQF,EAAM4B,MAAK,SAAA1B,GAAK,OAAKA,EAAME,SAAWsB,KAAKG,MAA6B,IAAtBL,EAAMC,KAAuBvB,EAAMG,MAAQoB,KAC3G,OAAKvB,EAzDP,SAAsBK,GAEpB,IAAIuB,EAEJ,GAAmB,UAAfvB,EAAKJ,MACP,OAAQI,EAAKL,OACX,IAAK,OACH4B,EAAY,SACZ,MACF,IAAK,QACHA,EAAY,SACZ,MACF,IAAK,SACHA,EAAY,SACZ,MACF,IAAK,OACHA,EAAY,SACZ,MACF,IAAK,SACHA,EAAY,SACZ,MACF,IAAK,OACHA,EAAY,cAMhB,OAAQvB,EAAKL,OACX,IAAK,OACH4B,EAAY,SACZ,MACF,IAAK,QACHA,EAAY,SACZ,MACF,IAAK,SACHA,EAAY,SACZ,MACF,IAAK,OACHA,EAAY,SACZ,MACF,IAAK,SACHA,EAAY,SACZ,MACF,IAAK,OACHA,EAAY,SAMlB,OAAOA,EAOAC,CAAa7B,GADD,GAKrB,OACE,qBAAKkB,GAAG,QAAR,SACGN,EAAakB,KAAI,SAAAC,GAChB,OACE,qBAAKC,UAAU,SAAyBC,MAAO,CAAEC,gBAAiBH,EAAOZ,YAAzE,SACGE,EAAUU,EAAOb,KADSa,EAAOb,UE9F9CiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.600bd7eb.chunk.js","sourcesContent":["import React from 'react';\nimport Teams from './Teams'\n\nfunction App() {\n  const board = {\n    rows: [1, 2, 3, 4, 5, 6, 7, 8],\n    columns: [1, 2, 3, 4, 5, 6, 7, 8]\n  }\n  const teams = Teams() //useState\n  const boardSquares = setBoard()\n  interface Piece {\n    piece: string,\n    color: string,\n    column: number,\n    row: number,\n    firstmove: boolean\n  }\n\n\n  function setBoard() {\n    let x = 0\n    const boardClasses = []\n    for (let i = 0; i < board.columns.length; i++) {\n      for (let j = 0; j < board.rows.length; j++) {\n        const squareClass = { id: (board.rows[j] / 10) + board.columns[i], background: x % 2 ? 'grey' : 'white' }\n        boardClasses.push(squareClass)\n        x++\n      }\n      x++\n    }\n    return boardClasses\n  }\n\n  function prettyPieces(team: Piece) {\n\n    let pieceIcon\n\n    if (team.color === 'White') {\n      switch (team.piece) {\n        case 'King':\n          pieceIcon = '♔'\n          break\n        case 'Queen':\n          pieceIcon = '♕'\n          break\n        case 'Knight':\n          pieceIcon = '♘'\n          break\n        case 'Rook':\n          pieceIcon = '♖'\n          break\n        case 'Bishop':\n          pieceIcon = '♗'\n          break\n        case 'Pawn':\n          pieceIcon = '♙'\n          break\n        default:\n          break\n      }\n    } else {\n      switch (team.piece) {\n        case 'King':\n          pieceIcon = '♚'\n          break\n        case 'Queen':\n          pieceIcon = '♛'\n          break\n        case 'Knight':\n          pieceIcon = '♞'\n          break\n        case 'Rook':\n          pieceIcon = '♜'\n          break\n        case 'Bishop':\n          pieceIcon = '♝'\n          break\n        case 'Pawn':\n          pieceIcon = '♟'\n          break\n        default:\n          break\n      }\n    }\n    return pieceIcon\n  }\n\n  function findPiece(key: number) {\n    const columnNumber = Math.floor(key)\n    const piece = teams.find(piece => (piece.column === Math.round((key - columnNumber) * 10) && piece.row === columnNumber))\n    if (!piece) return ''\n    return prettyPieces(piece)\n  }\n\n\n  return (\n    <div id='frame'>\n      {boardSquares.map(square => {\n        return (\n          <div className='square' key={square.id} style={{ backgroundColor: square.background }} >\n            {findPiece(square.id)}\n          </div>\n        )\n      })\n      }\n    </div >\n  );\n}\n\nexport default App;\n","\r\n\r\nexport default function Teams() {\r\n\r\n    const teams = makePieces()\r\n\r\n    function pieceConstructor(piece: string, color: string, column: number, row: number) {\r\n\r\n        return { piece: piece, color: color, column: column, row: row, firstmove: true }\r\n    }\r\n\r\n    function makePieces() {\r\n        const team = []\r\n        let piece\r\n        let color = 'White'\r\n\r\n        for (let y = 1; y <= 8; y++) {\r\n\r\n            if (y > 3) color = 'Black'\r\n\r\n            if (y === 8 || y === 1) {\r\n                for (let x = 1; x <= 8; x++) {\r\n                    switch (x) {\r\n                        case 1:\r\n                        case 8:\r\n                            piece = 'Rook'\r\n                            break\r\n                        case 2:\r\n                        case 7:\r\n                            piece = 'Knight'\r\n                            break\r\n                        case 3:\r\n                        case 6:\r\n                            piece = 'Bishop'\r\n                            break\r\n                        case 4:\r\n                            piece = 'Queen'\r\n                            break\r\n                        case 5:\r\n                            piece = 'King'\r\n                            break\r\n                        default:\r\n                            piece = ''\r\n                            break\r\n                    }\r\n\r\n                    const pieceObject = pieceConstructor(piece, color, x, y)\r\n\r\n                    team.push(pieceObject)\r\n                }\r\n            } else if (y === 7 || y === 2) {\r\n                for (let x = 1; x <= 8; x++) {\r\n                    const pieceObject = pieceConstructor('Pawn', color, x, y)\r\n                    team.push(pieceObject)\r\n                }\r\n            }\r\n        }\r\n        return team\r\n    }\r\n\r\n    return (\r\n        teams\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}